{"version":3,"file":"main.js","mappings":";;;;;AAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,kBAAkB,IAAI,mBAAmB;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AC3BO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,QAAQ;AAC1B,mBAAmB,QAAQ;AAC3B,wBAAwB,EAAE,IAAI,EAAE;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,OAAO;AAC1B,6BAA6B,YAAY,IAAI,mBAAmB;AAChE;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,mBAAmB,OAAO;AAC1B,6BAA6B,gBAAgB,IAAI,eAAe;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AC5GO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACjBe;AACf;AACA;AACA;AACA,mDAAmD,WAAW;AAC9D;AACA;AACA,EAAE;AACF;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,8DAA8D,IAAI;AAClE;AACA;AACA;AACA;AACA;AACA;AACO;AACP,sDAAsD,KAAK;AAC3D;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD,IAAI;AAC5D;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AClFqB;AACa;AACM;AACV;AAKZ;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,SAAS;AAChC;AACA,uBAAuB,IAAI;AAC3B,wBAAwB,IAAI;AAC5B,uBAAuB,IAAI;AAC3B,wBAAwB,IAAI;AAC5B,uBAAuB,IAAI;AAC3B,yBAAyB,MAAM;AAC/B;AACA,+BAA+B,SAAS;AACxC;AACA,+BAA+B,IAAI;AACnC,gCAAgC,IAAI;AACpC,+BAA+B,IAAI;AACnC,gCAAgC,IAAI;AACpC,+BAA+B,IAAI;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,MAAM;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,QAAQ;AACzB,kBAAkB,QAAQ;AAC1B;AACA;AACA,6CAA6C,EAAE,IAAI,EAAE;AACrD;AACA;AACA;AACA;AACA,iBAAiB,QAAQ;AACzB,kBAAkB,QAAQ;AAC1B;AACA;AACA,0CAA0C,EAAE,IAAI,EAAE;AAClD;AACA;AACA;AACA;AACA,0CAA0C,qBAAqB;AAC/D,oCAAoC,kBAAkB;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG,UAAU;AACb;AACA;AACA;AACA,uCAAuC,oBAAoB;AAC3D;AACA;AACA,KAAK;AACL;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,IAAI,IAAI,IAAI;AACxC;AACA,qBAAqB,gBAAgB;AACrC,8BAA8B,IAAI,IAAI,QAAQ;AAC9C;AACA,MAAM;AACN,qBAAqB,gBAAgB;AACrC,8BAA8B,QAAQ,IAAI,IAAI;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,YAAM;AACX,KAAK,gBAAgB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,kBAAkB;AACpB;AACA;AACA;AACA,4CAA4C,uBAAuB;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,WAAW;AACnC;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,CAAC;AACD;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,CAAC;AACD;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,CAAC;AACD;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,CAAC;AACD;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,OAAO;AAC/B,yBAAyB,MAAM;AAC/B;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA,EAAE;AACF,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,UAAU;AACf;AACA;AACA;AACA,KAAK,WAAW;AAChB;AACA;AACA;AACA;AACA,6DAA6D","sources":["webpack://battleship/./src/player.js","webpack://battleship/./src/gameboard.js","webpack://battleship/./src/ship.js","webpack://battleship/./src/render.js","webpack://battleship/./src/index.js"],"sourcesContent":["export class Player {\r\n\tconstructor(name, gameboard) {\r\n\t\tthis.name = name;\r\n\t\tthis.gameboard = gameboard;\r\n\t\tthis.previousMoves = [];\r\n\t}\r\n\r\n\thumanMove(enemyGameboard, coordinates) {\r\n\t\tconst move = coordinates;\r\n\t\tif (!this.previousMoves.includes(move)) {\r\n\t\t\tenemyGameboard.receiveAttack(move);\r\n\t\t\tthis.previousMoves.push(move);\r\n\t\t}\r\n\t}\r\n\r\n\tcomputerMove(enemyGameboard) {\r\n\t\tconst firstRandomNumber = Math.floor(Math.random() * 10);\r\n\t\tconst secondRandomNumber = Math.floor(Math.random() * 10);\r\n\t\tconst move = `${firstRandomNumber}, ${secondRandomNumber}`;\r\n\t\tif (!this.previousMoves.includes(move)) {\r\n\t\t\tenemyGameboard.receiveAttack(move);\r\n\t\t\tthis.previousMoves.push(move);\r\n\t\t\treturn move;\r\n\t\t}\r\n\r\n\t\treturn this.computerMove(enemyGameboard);\r\n\t}\r\n}\r\n","export class Gameboard {\r\n\tconstructor() {\r\n\t\tthis.coordinates = {};\r\n\t\tthis.missed = [];\r\n\t\tthis.ships = [];\r\n\t}\r\n\r\n\tinitializeCoordinates() {\r\n\t\tfor (let i = 0; i < 10; i++) {\r\n\t\t\tfor (let j = 0; j < 10; j++) {\r\n\t\t\t\tthis.coordinates[`${i}, ${j}`] = true;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tplaceShip(ship, coordinates) {\r\n\t\tconst shipLength = ship.length;\r\n\t\tif (shipLength === coordinates.length) {\r\n\t\t\tthis.ships.push(ship);\r\n\t\t\tcoordinates.forEach((coordinate) => {\r\n\t\t\t\tthis.coordinates[coordinate] = ship;\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\treceiveAttack(coordinates) {\r\n\t\tif (this.missed.includes(coordinates)) {\r\n\t\t\treturn;\r\n\t\t} else {\r\n\t\t\tif (this.coordinates[coordinates] !== true) {\r\n\t\t\t\tconst ship = this.coordinates[coordinates];\r\n\t\t\t\tship.hit();\r\n\t\t\t} else {\r\n\t\t\t\tthis.missed.push(coordinates);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tplaceComputerShips(\r\n\t\tfirstComputerShip,\r\n\t\tsecondComputerShip,\r\n\t\tthirdComputerShip,\r\n\t\tfourthComputerShip,\r\n\t\tfifthComputerShip\r\n\t) {\r\n\t\tconst coordinatesFirstShip = this.generateRandomCoordinates(1);\r\n\t\tconst coordinatesSecondShip = this.generateRandomCoordinates(2);\r\n\t\tconst coordinatesThirdShip = this.generateRandomCoordinates(3);\r\n\t\tconst coordinatesFourthShip = this.generateRandomCoordinates(4);\r\n\t\tconst coordinatesFifthShip = this.generateRandomCoordinates(5);\r\n\r\n\t\tconst shipCoordinates = [\r\n\t\t\t...coordinatesFirstShip,\r\n\t\t\t...coordinatesSecondShip,\r\n\t\t\t...coordinatesThirdShip,\r\n\t\t\t...coordinatesFourthShip,\r\n\t\t\t...coordinatesFifthShip,\r\n\t\t];\r\n\r\n\t\tfunction hasUniqueElements(array) {\r\n\t\t\tconst uniqueSet = new Set(array);\r\n\t\t\treturn uniqueSet.size === array.length;\r\n\t\t}\r\n\r\n\t\tif (hasUniqueElements(shipCoordinates)) {\r\n\t\t\tthis.placeShip(firstComputerShip, coordinatesFirstShip);\r\n\t\t\tthis.placeShip(secondComputerShip, coordinatesSecondShip);\r\n\t\t\tthis.placeShip(thirdComputerShip, coordinatesThirdShip);\r\n\t\t\tthis.placeShip(fourthComputerShip, coordinatesFourthShip);\r\n\t\t\tthis.placeShip(fifthComputerShip, coordinatesFifthShip);\r\n\t\t} else {\r\n\t\t\tthis.placeComputerShips(\r\n\t\t\t\tfirstComputerShip,\r\n\t\t\t\tsecondComputerShip,\r\n\t\t\t\tthirdComputerShip,\r\n\t\t\t\tfourthComputerShip,\r\n\t\t\t\tfifthComputerShip\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n\r\n\tgenerateRandomCoordinates(n) {\r\n\t\tconst result = [];\r\n\t\tconst isHorizontal = Math.random() < 0.5;\r\n\r\n\t\tif (isHorizontal) {\r\n\t\t\tconst startingRow = Math.floor(Math.random() * 10);\r\n\t\t\tconst startingColumn = Math.floor(Math.random() * (10 - n + 1));\r\n\r\n\t\t\tfor (let i = 0; i < n; i++) {\r\n\t\t\t\tconst newCoordinate = `${startingRow}, ${startingColumn + i}`;\r\n\t\t\t\tresult.push(newCoordinate);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tconst startingColumn = Math.floor(Math.random() * 10);\r\n\t\t\tconst startingRow = Math.floor(Math.random() * (10 - n + 1));\r\n\r\n\t\t\tfor (let i = 0; i < n; i++) {\r\n\t\t\t\tconst newCoordinate = `${startingRow + i}, ${startingColumn}`;\r\n\t\t\t\tresult.push(newCoordinate);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn result;\r\n\t}\r\n\r\n\tgameOver() {\r\n\t\treturn this.ships.every((ship) => ship.sunk === true);\r\n\t}\r\n}\r\n","export class Ship {\r\n\tconstructor(length, numberOfHits = 0, sunk = false) {\r\n\t\tthis.length = length;\r\n\t\tthis.numberOfHits = numberOfHits;\r\n\t\tthis.sunk = sunk;\r\n\t}\r\n\r\n\thit() {\r\n\t\tthis.numberOfHits += 1;\r\n\t\tif (this.numberOfHits >= this.length) {\r\n\t\t\tthis.sunk = true;\r\n\t\t}\r\n\t}\r\n\r\n\tisSunk() {\r\n\t\treturn this.sunk;\r\n\t}\r\n}\r\n","export default function showOurShips(gameboard, grid) {\r\n\tconst coordinates = Object.keys(gameboard.coordinates);\r\n\tcoordinates.forEach((coordinate) => {\r\n\t\tif (gameboard.coordinates[coordinate] !== true) {\r\n\t\t\tconst cell = grid.querySelector(`[data-human='${coordinate}']`);\r\n\t\t\tcell.style.backgroundColor = 'mediumseagreen';\r\n\t\t}\r\n\t});\r\n}\r\n\r\nexport function showAttack(computerGameboard, computerGrid, event) {\r\n\tevent.target.textContent = 'X';\r\n\tif (\r\n\t\tcomputerGameboard.coordinates[\r\n\t\t\tevent.target.getAttribute('data-computer')\r\n\t\t] === true\r\n\t) {\r\n\t\tevent.target.style.backgroundColor = 'cornflowerblue';\r\n\t} else {\r\n\t\tevent.target.style.backgroundColor = '#FFA351';\r\n\t}\r\n\r\n\tconst keys = Object.keys(computerGameboard.coordinates);\r\n\tfor (const key of keys) {\r\n\t\tif (computerGameboard.coordinates[key].sunk === true) {\r\n\t\t\tconst cell = computerGrid.querySelector(`[data-computer='${key}']`);\r\n\t\t\tcell.style.backgroundColor = '#F96167';\r\n\t\t\tcell.style.color = 'white';\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport function showComputerAttack(gameboard, humanGrid, move) {\r\n\tconst cell = humanGrid.querySelector(`[data-human='${move}']`);\r\n\tcell.textContent = 'X';\r\n\tif (gameboard.coordinates[cell.getAttribute('data-human')] === true) {\r\n\t\tcell.style.backgroundColor = 'cornflowerblue';\r\n\t} else {\r\n\t\tcell.style.backgroundColor = '#FFA351';\r\n\t}\r\n\r\n\tconst keys = Object.keys(gameboard.coordinates);\r\n\tfor (const key of keys) {\r\n\t\tif (gameboard.coordinates[key].sunk === true) {\r\n\t\t\tconst cell = humanGrid.querySelector(`[data-human='${key}']`);\r\n\t\t\tcell.style.backgroundColor = '#F96167';\r\n\t\t\tcell.style.color = 'white';\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport function showNextDragShip(\r\n\tdraggedShip,\r\n\tshipLength,\r\n\tsecondDragShip,\r\n\tthirdDragShip,\r\n\tfourthDragShip,\r\n\tfifthDragShip,\r\n\tshipsContainer\r\n) {\r\n\tswitch (shipLength) {\r\n\t\tcase '1':\r\n\t\t\tdraggedShip.style.display = 'none';\r\n\t\t\tsecondDragShip.style.display = 'flex';\r\n\t\t\tbreak;\r\n\t\tcase '2':\r\n\t\t\tdraggedShip.style.display = 'none';\r\n\t\t\tthirdDragShip.style.display = 'flex';\r\n\t\t\tbreak;\r\n\t\tcase '3':\r\n\t\t\tdraggedShip.style.display = 'none';\r\n\t\t\tfourthDragShip.style.display = 'flex';\r\n\t\t\tbreak;\r\n\t\tcase '4':\r\n\t\t\tdraggedShip.style.display = 'none';\r\n\t\t\tfifthDragShip.style.display = 'flex';\r\n\t\t\tbreak;\r\n\t\tcase '5':\r\n\t\t\tdraggedShip.style.display = 'none';\r\n\t\t\tshipsContainer.style.borderColor = 'mediumseagreen';\r\n\t\t\tbreak;\r\n\t}\r\n}\r\n","import './style.css';\r\nimport { Player } from './player';\r\nimport { Gameboard } from './gameboard';\r\nimport { Ship } from './ship';\r\nimport render, {\r\n\tshowAttack,\r\n\tshowComputerAttack,\r\n\tshowNextDragShip,\r\n} from './render';\r\n\r\nconst humanGridContainer = document.getElementById('human-grid-container');\r\nconst computerGridContainer = document.getElementById(\r\n\t'computer-grid-container'\r\n);\r\nlet humanGrid = document.getElementById('human-grid');\r\nlet computerGrid = document.getElementById('computer-grid');\r\nconst modal = document.getElementById('modal');\r\nconst winner = document.getElementById('winner');\r\nconst replayButton = document.getElementById('replay-button');\r\nconst humanScore = document.getElementById('human-score');\r\nconst computerScore = document.getElementById('computer-score');\r\nconst ships = document.querySelectorAll('.ship');\r\nconst shipsContainer = document.getElementById('ships');\r\nconst firstDragShip = document.getElementById('ship-1');\r\nconst secondDragShip = document.getElementById('ship-2');\r\nconst thirdDragShip = document.getElementById('ship-3');\r\nconst fourthDragShip = document.getElementById('ship-4');\r\nconst fifthDragShip = document.getElementById('ship-5');\r\nconst dragFirstShip = document.getElementById('drag-1');\r\nconst dragSecondShip = document.getElementById('drag-2');\r\nconst dragThirdShip = document.getElementById('drag-3');\r\nconst dragFourthShip = document.getElementById('drag-4');\r\nconst dragFifthShip = document.getElementById('drag-5');\r\n\r\nlet computerCurrentScore = 0;\r\nlet humanCurrentScore = 0;\r\n\r\nfunction initialize() {\r\n\tconst gameboard = new Gameboard();\r\n\tgameboard.initializeCoordinates();\r\n\tconst firstShip = new Ship(1);\r\n\tconst secondShip = new Ship(2);\r\n\tconst thirdShip = new Ship(3);\r\n\tconst fourthShip = new Ship(4);\r\n\tconst fifthShip = new Ship(5);\r\n\tconst humanPlayer = new Player('Human', gameboard);\r\n\r\n\tconst computerGameboard = new Gameboard();\r\n\tcomputerGameboard.initializeCoordinates();\r\n\tconst firstComputerShip = new Ship(1);\r\n\tconst secondComputerShip = new Ship(2);\r\n\tconst thirdComputerShip = new Ship(3);\r\n\tconst fourthComputerShip = new Ship(4);\r\n\tconst fifthComputerShip = new Ship(5);\r\n\tcomputerGameboard.placeComputerShips(\r\n\t\tfirstComputerShip,\r\n\t\tsecondComputerShip,\r\n\t\tthirdComputerShip,\r\n\t\tfourthComputerShip,\r\n\t\tfifthComputerShip\r\n\t);\r\n\tconst computerPlayer = new Player('Computer', computerGameboard);\r\n\r\n\thumanGrid.parentNode.removeChild(humanGrid);\r\n\thumanGrid = document.createElement('div');\r\n\thumanGrid.setAttribute('id', 'human-grid');\r\n\thumanGrid.classList.add('grid');\r\n\thumanGridContainer.appendChild(humanGrid);\r\n\r\n\tcomputerGrid.parentNode.removeChild(computerGrid);\r\n\tcomputerGrid = document.createElement('div');\r\n\tcomputerGrid.setAttribute('id', 'computer-grid');\r\n\tcomputerGrid.classList.add('grid');\r\n\tcomputerGridContainer.appendChild(computerGrid);\r\n\r\n\tfor (let i = 0; i < 10; i++) {\r\n\t\tfor (let j = 0; j < 10; j++) {\r\n\t\t\tconst gridCell = document.createElement('div');\r\n\t\t\tgridCell.classList.add('computer-grid-cell');\r\n\t\t\tgridCell.setAttribute('data-computer', `${i}, ${j}`);\r\n\t\t\tcomputerGrid.appendChild(gridCell);\r\n\t\t}\r\n\t}\r\n\r\n\tfor (let i = 0; i < 10; i++) {\r\n\t\tfor (let j = 0; j < 10; j++) {\r\n\t\t\tconst gridCell = document.createElement('div');\r\n\t\t\tgridCell.classList.add('human-grid-cell');\r\n\t\t\tgridCell.setAttribute('data-human', `${i}, ${j}`);\r\n\t\t\thumanGrid.appendChild(gridCell);\r\n\t\t}\r\n\t}\r\n\r\n\tcomputerScore.textContent = `Computer: ${computerCurrentScore}`;\r\n\thumanScore.textContent = `Human: ${humanCurrentScore}`;\r\n\r\n\tfunction attack(event) {\r\n\t\tif (!event.target.classList.contains('clicked')) {\r\n\t\t\tevent.target.classList.add('clicked');\r\n\t\t\thumanPlayer.humanMove(\r\n\t\t\t\tcomputerGameboard,\r\n\t\t\t\tevent.target.getAttribute('data-computer')\r\n\t\t\t);\r\n\r\n\t\t\tshowAttack(computerGameboard, computerGrid, event);\r\n\r\n\t\t\tif (computerGameboard.gameOver()) {\r\n\t\t\t\twinner.textContent = \"You're a winner 🥳\";\r\n\t\t\t\thumanScore.textContent = `Human: ${++humanCurrentScore}`;\r\n\t\t\t\tmodal.showModal();\r\n\t\t\t\tmodal.style.display = 'flex';\r\n\t\t\t} else {\r\n\t\t\t\tcomputerMove();\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\treturn;\r\n\t\t}\r\n\t}\r\n\r\n\t//Drag functionality\r\n\tlet draggedShip = null;\r\n\r\n\tships.forEach((ship) => {\r\n\t\tship.addEventListener('dragstart', handleDragStart);\r\n\t});\r\n\thumanGrid.addEventListener('dragover', handleDragOver);\r\n\thumanGrid.addEventListener('drop', handleDrop);\r\n\r\n\tfunction handleDragStart(event) {\r\n\t\tdraggedShip = event.target;\r\n\t\tevent.dataTransfer.setData(\r\n\t\t\t'text/plain',\r\n\t\t\tdraggedShip.getAttribute('data-length')\r\n\t\t);\r\n\t}\r\n\r\n\tfunction handleDragOver(event) {\r\n\t\tevent.preventDefault();\r\n\t}\r\n\r\n\tfunction handleDrop(event) {\r\n\t\tevent.preventDefault();\r\n\r\n\t\tif (draggedShip) {\r\n\t\t\tconst shipLength = draggedShip.getAttribute('data-length');\r\n\t\t\tconst cell = document.elementFromPoint(\r\n\t\t\t\tevent.clientX,\r\n\t\t\t\tevent.clientY\r\n\t\t\t);\r\n\t\t\tconst coordinate = cell.getAttribute('data-human');\r\n\r\n\t\t\tif (coordinate) {\r\n\t\t\t\tconst [row, col] = coordinate.split(',').map(Number);\r\n\t\t\t\tconst shipCoordinates = [];\r\n\t\t\t\tshipCoordinates.push(`${row}, ${col}`);\r\n\t\t\t\tif (draggedShip.classList.contains('horizontal')) {\r\n\t\t\t\t\tfor (let i = 1; i < shipLength; i++) {\r\n\t\t\t\t\t\tshipCoordinates.push(`${row}, ${col + i}`);\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tfor (let i = 1; i < shipLength; i++) {\r\n\t\t\t\t\t\tshipCoordinates.push(`${row + i}, ${col}`);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlet ship = null;\r\n\t\t\t\tswitch (shipLength) {\r\n\t\t\t\t\tcase '1':\r\n\t\t\t\t\t\tship = firstShip;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase '2':\r\n\t\t\t\t\t\tship = secondShip;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase '3':\r\n\t\t\t\t\t\tship = thirdShip;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase '4':\r\n\t\t\t\t\t\tship = fourthShip;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase '5':\r\n\t\t\t\t\t\tship = fifthShip;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (\r\n\t\t\t\t\tshipCoordinates.every(\r\n\t\t\t\t\t\t(coordinate) =>\r\n\t\t\t\t\t\t\tgameboard.coordinates[coordinate] === true\r\n\t\t\t\t\t)\r\n\t\t\t\t) {\r\n\t\t\t\t\tgameboard.placeShip(ship, shipCoordinates);\r\n\t\t\t\t\trender(gameboard, humanGrid);\r\n\t\t\t\t\tshowNextDragShip(\r\n\t\t\t\t\t\tdraggedShip,\r\n\t\t\t\t\t\tshipLength,\r\n\t\t\t\t\t\tsecondDragShip,\r\n\t\t\t\t\t\tthirdDragShip,\r\n\t\t\t\t\t\tfourthDragShip,\r\n\t\t\t\t\t\tfifthDragShip,\r\n\t\t\t\t\t\tshipsContainer\r\n\t\t\t\t\t);\r\n\r\n\t\t\t\t\tif (shipLength === '5') {\r\n\t\t\t\t\t\tconst computerGridCells = document.querySelectorAll(\r\n\t\t\t\t\t\t\t'.computer-grid-cell'\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t\tcomputerGridCells.forEach((cell) => {\r\n\t\t\t\t\t\t\tcell.style.cursor = 'pointer';\r\n\t\t\t\t\t\t\tcell.addEventListener('click', (event) => {\r\n\t\t\t\t\t\t\t\tattack(event);\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tdraggedShip = null;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tfunction computerMove() {\r\n\t\tconst move = computerPlayer.computerMove(gameboard);\r\n\r\n\t\tshowComputerAttack(gameboard, humanGrid, move);\r\n\r\n\t\tif (gameboard.gameOver()) {\r\n\t\t\twinner.textContent = 'Computer is a winner 😭';\r\n\t\t\tcomputerScore.textContent = `Computer: ${++computerCurrentScore}`;\r\n\t\t\tmodal.showModal();\r\n\t\t\tmodal.style.display = 'flex';\r\n\t\t}\r\n\t}\r\n\r\n\t//Cheat 🫣\r\n\tfunction cheat() {\r\n\t\tconst computerCoordinates = Object.keys(gameboard.coordinates);\r\n\t\tcomputerCoordinates.forEach((coordinate) => {\r\n\t\t\tif (computerGameboard.coordinates[coordinate] !== true) {\r\n\t\t\t\tconst cell = computerGrid.querySelector(\r\n\t\t\t\t\t`[data-computer='${coordinate}']`\r\n\t\t\t\t);\r\n\t\t\t\tcell.style.backgroundColor = 'mediumseagreen';\r\n\t\t\t}\r\n\t\t});\r\n\t\treturn 'You are cheating 🫣';\r\n\t}\r\n\twindow.cheat = cheat;\r\n}\r\n\r\ninitialize();\r\n\r\nreplayButton.addEventListener('click', () => {\r\n\tfirstDragShip.style.display = 'flex';\r\n\tmodal.close();\r\n\tmodal.style.display = 'none';\r\n\tshipsContainer.style.borderColor = 'black';\r\n\tinitialize();\r\n});\r\n\r\n//Add event listeners for dragging\r\ndragFirstShip.addEventListener('mousedown', () => {\r\n\tfirstDragShip.setAttribute('draggable', 'true');\r\n});\r\nfirstDragShip.addEventListener('dragend', () => {\r\n\tfirstDragShip.setAttribute('draggable', 'false');\r\n});\r\n\r\ndragSecondShip.addEventListener('mousedown', () => {\r\n\tsecondDragShip.setAttribute('draggable', 'true');\r\n});\r\nsecondDragShip.addEventListener('dragend', () => {\r\n\tsecondDragShip.setAttribute('draggable', 'false');\r\n});\r\n\r\ndragThirdShip.addEventListener('mousedown', () => {\r\n\tthirdDragShip.setAttribute('draggable', 'true');\r\n});\r\nthirdDragShip.addEventListener('dragend', () => {\r\n\tthirdDragShip.setAttribute('draggable', 'false');\r\n});\r\n\r\ndragFourthShip.addEventListener('mousedown', () => {\r\n\tfourthDragShip.setAttribute('draggable', 'true');\r\n});\r\nfourthDragShip.addEventListener('dragend', () => {\r\n\tfourthDragShip.setAttribute('draggable', 'false');\r\n});\r\n\r\ndragFifthShip.addEventListener('mousedown', () => {\r\n\tfifthDragShip.setAttribute('draggable', 'true');\r\n});\r\nfifthDragShip.addEventListener('dragend', () => {\r\n\tfifthDragShip.setAttribute('draggable', 'false');\r\n});\r\n\r\n//Rotate a ship on a click\r\nships.forEach((ship) => {\r\n\tship.addEventListener('click', () => {\r\n\t\tconst height = ship.offsetHeight;\r\n\t\tconst width = ship.offsetWidth;\r\n\t\tship.style.width = `${height}px`;\r\n\t\tship.style.height = `${width}px`;\r\n\t\tif (ship.classList.contains('horizontal')) {\r\n\t\t\tship.classList.remove('horizontal');\r\n\t\t\tship.classList.add('vertical');\r\n\t\t\tship.style.flexDirection = 'column';\r\n\t\t} else {\r\n\t\t\tship.classList.remove('vertical');\r\n\t\t\tship.classList.add('horizontal');\r\n\t\t\tship.style.flexDirection = 'row';\r\n\t\t}\r\n\t});\r\n});\r\n\r\n/* function updateDragShipDimensions() {\r\n\tconst gridCell = document.querySelector('.human-grid-cell');\r\n\tconst cellWidth = gridCell.offsetWidth;\r\n\tconst cellHeight = gridCell.offsetHeight;\r\n\r\n\tdocument.documentElement.style.setProperty(\r\n\t\t'--cell-width',\r\n\t\t`${cellWidth}px`\r\n\t);\r\n\tdocument.documentElement.style.setProperty(\r\n\t\t'--cell-height',\r\n\t\t`${cellHeight}px`\r\n\t);\r\n}\r\n\r\nupdateDragShipDimensions();\r\nwindow.addEventListener('resize', updateDragShipDimensions); */\r\n"],"names":[],"sourceRoot":""}